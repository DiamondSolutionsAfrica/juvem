{% extends 'base.html.twig' %}

{% block title %}Anwesenheitsliste ausfüllen ({{ event.title }}){% endblock %}

{% block body %}
    {% embed 'common/header/base-page-header.html.twig' with {'title': 'Anwesenheitsliste', 'subtitle': 'ausfüllen'} %}
        {% block breadcrumb %}
            <li><a href="{{ path('event_list') }}">Veranstaltungen</a></li>
            <li><a href="{{ path('event', {'eid': event.eid }) }}">{{ event.title }}</a></li>
            <li><a href="{{ path('event_attendance_lists', {'eid': event.eid }) }}">Anwesenheitslisten</a></li>
            <li class="active">{{ list.title }} ausfüllen</li>
        {% endblock %}
    {% endembed %}
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div id="bootstrap-table-toolbar" class="form-inline">
                    <a href="{{ path('event_attendance_list_edit', {eid: event.eid, tid: list.tid}) }}"
                       class="btn btn-primary">{{ 'pencil'|glyph }}<span class="hidden-xs"> Bearbeiten</span></a>
                    <div class="btn-group" data-toggle="buttons" title="Automatisch aktualisieren" id="autoRefresh">
                        <label class="btn btn-info">
                            <input type="checkbox" autocomplete="off"> {{ 'repeat'|glyph }} <span
                                    class="hidden-xs">aktuell halten</span>
                        </label>
                    </div>
                </div>
                <table id="participantsAttendanceListTable"
                       class="table table-striped table-remote-content table-no-hover" data-unique-id="aid"
                       data-id-field="aid" data-toggle="table" data-cache="false" data-pagination="true"
                       data-side-pagination="client" data-show-refresh="true" data-show-columns="true"
                       data-search-align="right" data-toolbar="#bootstrap-table-toolbar" data-striped="true"
                       data-show-filter="true" data-search="true" data-page-size="25" data-sub-id="e{{ event.eid }}"
                       data-url="{{ path('event_attendance_list_participants_data', {eid: event.eid, tid: list.tid}) }}"
                       data-sort-name="nameLast" data-sort-order="asc">
                    <thead>
                    <tr>
                        <th data-field="did" data-sortable="true" data-visible="false">#</th>
                        <th data-field="tid" data-sortable="true" data-visible="false">#T</th>
                        <th data-field="aid" data-sortable="true" data-visible="false">#A</th>
                        <th data-field="pid" data-sortable="true" data-visible="false">#P</th>
                        <th data-field="nameFirst" data-sortable="true">Vorname</th>
                        <th data-field="nameLast" data-sortable="true">Nachname</th>
                        <th data-field="status" data-sortable="false" data-visible="false">Status</th>
                        <th data-field="action" data-sortable="false">Aktion</th>
                    </tr>
                    </thead>
                </table>

            </div>
        </div>
    </div>
{% endblock %}
{% block javascriptCustom %}
    <script type='text/javascript'>
        $(function () {
            var reloadBlocked = false,
                table = $('#participantsAttendanceListTable');

            var autoRefresh = function () {
                    if (!reloadBlocked) {
                        reloadBlocked = true;
                        $.ajax({
                            type: 'POST',
                            url: '{{ path('event_attendance_list_participants_data', {eid: event.eid, tid: list.tid}) }}',
                            datatype: 'json',
                            success: function (dataNew) {
                                var changed = false,
                                    rowCurrent;
                                $.each(dataNew, function (indexRow, rowData) {
                                    if (changed) {
                                        return false;
                                    }
                                    if (rowData.did) {
                                        rowCurrent = table.bootstrapTable('getRowByUniqueId', rowData.aid);
                                        $.each(rowCurrent, function (indexColumn, cellValue) {
                                            if (cellValue !== rowCurrent[indexColumn]) {
                                                changed = true;
                                                return false;
                                            }
                                        });
                                    }
                                });

                                if (changed) {
                                    table.bootstrapTable('load', dataNew);
                                }
                                reloadBlocked = false;
                            },
                            error: function () {
                                var autoRefreshInput = $('#autoRefresh input');
                                if (autoRefreshInput.prop('checked')) {
                                    autoRefreshInput.prop('checked', false);
                                    $('#autoRefresh label').removeClass('active');
                                }
                                clearInterval(autoRefreshInterval);
                                $(document).trigger('add-alerts', {
                                    message: 'Die Daten der Anwesenheitsliste konnten nicht geladen werden. Möglicherweise ist die Internetverbindung unterbrochen worden.',
                                    priority: 'error'
                                });
                                reloadBlocked = false;
                            }
                        });

                    } else {
                        reloadBlocked = true;
                    }
                },
                autoRefreshInterval = false;

            $('#autoRefresh').click(function () {
                var checkbox = $(this).find('input'),
                    oldValue = checkbox.prop('checked'),
                    newValue = !oldValue;

                if (newValue) {
                    autoRefresh();
                    autoRefreshInterval = setInterval(autoRefresh, 10000);
                } else if (autoRefreshInterval !== false) {
                    clearInterval(autoRefreshInterval);
                }
            });

        });
    </script>
{% endblock %}
